name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build
    env:
      OUTPUT_DIR: ${{ github.workspace }}/release-out
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18.x'
    - uses: actions/checkout@v3
    - name: Build Binary
      env:
        ARCH_ID: "amd64"
      run: |
        mkdir ${OUTPUT_DIR}
        RELEASE_TAG="${GITHUB_REF##*/}"
        TAR_FILE_NAME="buildg-${RELEASE_TAG}-linux-${ARCH_ID}.tar.gz"
        SHA256SUM_FILE_NAME="${TAR_FILE_NAME}.sha256sum"
        PREFIX=$(pwd)/out make
        cp ./extras/buildg.sh ./out/
        tar -C ./out/ -zcvf "${OUTPUT_DIR}/${TAR_FILE_NAME}" .
        cat "${OUTPUT_DIR}/${TAR_FILE_NAME}" | tar -zv --list
        ( cd ${OUTPUT_DIR}; sha256sum ${TAR_FILE_NAME} ) > "${OUTPUT_DIR}/${SHA256SUM_FILE_NAME}"
    - name: Save Binary
      uses: actions/upload-artifact@v3
      with:
        name: builds-${{ env.ARCH_ID }}
        path: ${{ env.OUTPUT_DIR }}/*

  release:
    runs-on: ubuntu-20.04
    name: Release
    needs: [build]
    env:
      OUTPUT_DIR: ${{ github.workspace }}/builds
    steps:
    - uses: actions/checkout@v3
    - name: Download Builds
      uses: actions/download-artifact@v3
      with:
        path: ${{ env.OUTPUT_DIR }}
    - name: Create Release
      env:
        ARCH_ID: "amd64"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG="${GITHUB_REF##*/}"
        cat <<EOF > ${GITHUB_WORKSPACE}/release-note.txt
        ${RELEASE_TAG}

        (TBD)
        EOF
        ASSET_FLAGS=()
        ls -al ${OUTPUT_DIR}/
        for F in ${OUTPUT_DIR}/builds-${ARCH_ID}/* ; do
          ASSET_FLAGS+=("-a" "$F")
        done
        hub release create "${ASSET_FLAGS[@]}" -F ${GITHUB_WORKSPACE}/release-note.txt --draft "${RELEASE_TAG}"
